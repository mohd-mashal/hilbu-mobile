# HILBU (Expo) — Codemagic CI/CD
# Builds Android .aab + iOS .ipa using ONLY environment variables (no Code signing UI needed)

workflows:
  android_release:
    name: HILBU • Android Release (.aab)
    max_build_duration: 60
    environment:
      node: 18.20.4
      java: 17
      vars:
        APPLICATION_ID_ANDROID: com.hilbu.recovery
    triggering:
      events: [push]
      branch_patterns:
        - pattern: main
          include: true
          source: true
    cache:
      cache_paths:
        - $HOME/.npm
        - ~/.gradle
        - android/.gradle
    scripts:
      - name: Install dependencies
        script: |
          npm ci
      - name: Prebuild native projects if missing
        script: |
          if [ ! -d "android" ] || [ ! -d "ios" ]; then
            npx expo prebuild --non-interactive --platform android,ios
          fi
      - name: Decode and place Android keystore (from env)
        script: |
          echo "$ANDROID_KEYSTORE_BASE64" | base64 --decode > android/app/release.keystore
      - name: Build Android App Bundle (release)
        script: |
          cd android
          ./gradlew clean bundleRelease \
            -Pandroid.injected.signing.store.file=release.keystore \
            -Pandroid.injected.signing.store.password="$ANDROID_KEYSTORE_PASSWORD" \
            -Pandroid.injected.signing.key.alias="$ANDROID_KEY_ALIAS" \
            -Pandroid.injected.signing.key.password="$ANDROID_KEY_PASSWORD"
    artifacts:
      - android/app/build/outputs/bundle/release/*.aab

  ios_release:
    name: HILBU • iOS Release (TestFlight/.ipa)
    max_build_duration: 90
    environment:
      node: 18.20.4
      xcode: 15.4
      cocoapods: default
      ios_signing:
        distribution_type: app-store
        # Using variables (no .p8 upload UI required)
        app_store_connect:
          key_id: $APPLE_API_KEY_ID
          issuer_id: $APPLE_API_ISSUER_ID
          private_key: $APP_STORE_PRIVATE_KEY
      vars:
        BUNDLE_ID_IOS: com.hilbu.recovery
    triggering:
      events: [push]
      branch_patterns:
        - pattern: main
          include: true
          source: true
    cache:
      cache_paths:
        - $HOME/.npm
        - $HOME/Library/Caches/CocoaPods
        - $HOME/Library/Developer/Xcode/DerivedData
    scripts:
      - name: Install dependencies
        script: |
          npm ci
      - name: Prebuild iOS if missing
        script: |
          if [ ! -d "ios" ]; then
            npx expo prebuild --non-interactive --platform ios
          fi
      - name: Install CocoaPods
        script: |
          cd ios
          pod install --repo-update
      - name: Xcode archive
        script: |
          cd ios
          WORKSPACE=$(ls *.xcworkspace | head -n1)
          SCHEME=$(ls *.xcodeproj | head -n1 | sed 's/.xcodeproj//')
          xcodebuild -workspace "$WORKSPACE" \
            -scheme "$SCHEME" \
            -configuration Release \
            -archivePath $CM_BUILD_DIR/build/HILBU.xcarchive \
            clean archive \
            PRODUCT_BUNDLE_IDENTIFIER=$BUNDLE_ID_IOS \
            CODE_SIGN_STYLE=Automatic \
            | xcpretty
      - name: Export IPA
        script: |
          xcodebuild -exportArchive \
            -archivePath $CM_BUILD_DIR/build/HILBU.xcarchive \
            -exportOptionsPlist <(printf '%s' '
              {
                "method": "app-store",
                "uploadSymbols": true,
                "compileBitcode": false
              }') \
            -exportPath $CM_BUILD_DIR/build/export \
            | xcpretty
    artifacts:
      - build/export/*.ipa
      - build/HILBU.xcarchive/dSYMs/**/*.dSYM
    publishing:
      app_store_connect:
        key_id: $APPLE_API_KEY_ID
        issuer_id: $APPLE_API_ISSUER_ID
        private_key: $APP_STORE_PRIVATE_KEY
        submit_to_testflight: true
